・MainPanel内のMainPanelメソッドでは，ゲームを繰り返して行いますが，閾値の比較と通常のgameの部分でコメントアウトを変更する必要があります．

閾値の比較は，AIがmctもしくはh_mctで両方おなじであるときに使用でき，モンテカルロ木探索においていつ木を展開するか設定するための閾値が何が最もよいか選ぶためのものです．
addの値を変更することにより，比較する値の差を決めることができます．
1からaddごとに比較を行っていき，閾値が大きいほうの勝数が多くなった時点で終了します．


通常のgameは，program内の説明と同様なので割愛します．


・hyoukaCPUは“リバーシの評価関数について”（塩田 好，近畿大学理工学部情報学科 卒業研究報告書，2012/1/31）の内容をもとに作った評価関数です．また，以下の3つはhyoukaCPUで用いた評価関数を１つ１つ分けたものです．
- ichiCPU 位置情報のみによる評価関数
- kakuteiCPU 確定石のみによる評価関数
- kouhoCPU 候補手数のみによる評価関数


・h_mctCPUはプレイアウトを評価関数同士のプレイにすることにより，強化を行ったモンテカルロ木探索のAIです．

・c_mctCPUは評価関数で枝刈りを行ったモンテカルロ木探索のAIです．
-手の点数を比較し，最善手からの点差がある閾値以上なものはプレイアウトを行わないようにしています．

・hc_mctCPUは上記の2つの強化を合わせて行ったモンテカルロ木探索のAIです．